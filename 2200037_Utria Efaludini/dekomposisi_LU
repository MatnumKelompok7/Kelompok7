# Memasukkan pustaka NumPy untuk digunakan dalam pemrosesan matriks
import numpy as np  

# Mendefinisikan fungsi LU_decomposition yang menerima matriks A dan ukuran n sebagai argumen
def LU_decomposition(A, n):
    # Menginisialisasi matriks L dan U dengan nol, yang akan menyimpan hasil dekomposisi LU
    L = np.zeros((n, n))
    U = np.zeros((n, n))

    # Iterasi untuk setiap baris i dari matriks
    for i in range(n):  
        # Inisialisasi elemen diagonal matriks L dengan 1
        L[i, i] = 1  

        # Iterasi untuk setiap kolom j mulai dari i hingga akhir matriks
        for j in range(i, n):  
            # Menyalin nilai elemen matriks A ke matriks U
            U[i, j] = A[i, j]  

            # Menghitung elemen matriks U dengan mengurangkan hasil perkalian elemen-elemen matriks L dan U
            for k in range(i):  
                U[i, j] -= L[i, k] * U[k, j]

        # Melanjutkan iterasi untuk setiap kolom j mulai dari i + 1
        for j in range(i + 1, n):  
            # Menyalin nilai elemen matriks A ke matriks L
            L[j, i] = A[j, i]  

            # Menghitung elemen matriks L dengan mengurangkan hasil perkalian elemen-elemen matriks L dan U
            for k in range(i):  
                L[j, i] -= L[j, k] * U[k, i]

            # Normalisasi elemen L dengan membaginya dengan elemen diagonal dari U
            L[j, i] /= U[i, i]  

    # Mengembalikan matriks L dan U yang berisi hasil dekomposisi LU
    return L, U  

# Memasukkan matriks contoh A dan ukuran n ke dalam fungsi LU_decomposition
A = np.array([[4, 3, 2],
              [2, 2, 3],
              [3, 5, 5]])
n = 3
L, U = LU_decomposition(A, n)

# Mencetak hasil
print("Matriks L:")
print(L)
print("Matriks U:")
print(U)
